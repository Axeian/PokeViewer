[{"C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\components\\PokeList.js":"1","C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\components\\PokeCard.js":"2","C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\components\\SearchCard.js":"3","C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\components\\AbilityBlock.js":"4","C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\App.js":"5"},{"size":4675,"mtime":1615236474486,"results":"6","hashOfConfig":"7"},{"size":7325,"mtime":1615325790292,"results":"8","hashOfConfig":"7"},{"size":5934,"mtime":1615314324716,"results":"9","hashOfConfig":"7"},{"size":965,"mtime":1615325171961,"results":"10","hashOfConfig":"7"},{"size":2282,"mtime":1614717480081,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19pqsub",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\components\\PokeList.js",[],"C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\components\\PokeCard.js",["23","24","25"],"C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\components\\SearchCard.js",["26","27","28"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PokeCard from \"./PokeCard\";\r\nimport RotateLoader from \"react-spinners/RotateLoader\";\r\n\r\nfunction SearchCard({\r\n  searchCardLoaded,\r\n  setSearchCardLoaded,\r\n  latestSubmittedString,\r\n  setLatestSubmittedString,\r\n  hidden,\r\n  setHidden,\r\n  setLastViewedPokemon,\r\n}) {\r\n  const [pokemonName, setPokemonName] = useState(\"\");\r\n  const [pokemonData, setPokemonData] = useState(null);\r\n  const [pokemonTypes, setPokemonTypes] = useState([]);\r\n  const [typeData, setTypeData] = useState([]);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [invalidPokemon, SetInvalidPokemon] = useState(false);\r\n  const [abilitiesData, setAbilitiesData] = useState({});\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    setSearchCardLoaded(false);\r\n    setHidden(false);\r\n    SetInvalidPokemon(false);\r\n    const getPokemonData = async () => {\r\n      if (isMounted.current) {\r\n        try {\r\n          const prevPokemon = pokemonData ? pokemonData.name : null;\r\n          setLastViewedPokemon(prevPokemon);\r\n\r\n          const res = await axios.get(\r\n            `https://pokeapi.co/api/v2/pokemon/${latestSubmittedString.toLowerCase()}/`,\r\n            {\r\n              cancelToken: source.token,\r\n            }\r\n          );\r\n\r\n          if (res.data.name !== prevPokemon) {\r\n            setPokemonData(res.data);\r\n            setImageLoaded(false);\r\n            setSearchCardLoaded(false);\r\n          }\r\n        } catch (err) {\r\n          if (!axios.isCancel(err)) SetInvalidPokemon(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    getPokemonData();\r\n    return () => source.cancel();\r\n  }, [latestSubmittedString, pokemonData]);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    setHidden(false);\r\n    const getTypeData = async () => {\r\n      if (isMounted.current) {\r\n        let strongWeakData = [];\r\n        let typeArray = [];\r\n\r\n        for (const t of pokemonData.types) {\r\n          let type = t.type.name;\r\n          typeArray.push(type);\r\n          const typeRes = await axios.get(\r\n            `https://pokeapi.co/api/v2/type/${type}/`,\r\n            { cancelToken: source.token }\r\n          );\r\n\r\n          let tData = typeRes.data.damage_relations;\r\n          tData = Object.fromEntries(\r\n            Object.entries(tData).map(([key, types]) => [\r\n              key,\r\n              types.map((t) => t.name),\r\n            ])\r\n          );\r\n          tData.type = type;\r\n          strongWeakData.push(tData);\r\n        }\r\n\r\n        setTypeData(strongWeakData);\r\n        setPokemonTypes(typeArray);\r\n        setSearchCardLoaded(true);\r\n      } else {\r\n        isMounted.current = true;\r\n      }\r\n    };\r\n    getTypeData();\r\n\r\n    return () => source.cancel();\r\n  }, [pokemonData]);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    setHidden(false);\r\n    const getAbilityData = async () => {\r\n      if (isMounted.current) {\r\n        let abilityData = {};\r\n\r\n        for (const a of pokemonData.abilities) {\r\n          let ability = a.ability.name;\r\n          const abilityRes = await axios.get(\r\n            `https://pokeapi.co/api/v2/ability/${ability}/`,\r\n            { cancelToken: source.token }\r\n          );\r\n\r\n          let abData = abilityRes.data.effect_entries;\r\n\r\n          abData = abData.filter((entry) => entry.language.name === \"en\");\r\n\r\n          abilityData[`${ability}`] = abData[0].short_effect;\r\n        }\r\n\r\n        setAbilitiesData(abilityData);\r\n        setSearchCardLoaded(true);\r\n      } else {\r\n        isMounted.current = true;\r\n      }\r\n    };\r\n    if (pokemonData) getAbilityData();\r\n\r\n    return () => source.cancel();\r\n  }, [pokemonData]);\r\n\r\n  const handleSearch = (name) => {\r\n    SetInvalidPokemon(false);\r\n    setLatestSubmittedString(name);\r\n    setHidden(false);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    handleSearch(pokemonName);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"auto\" }}>\r\n      <SearchBar\r\n        pokemonName={pokemonName}\r\n        handleSubmit={handleSubmit}\r\n        setPokemonName={setPokemonName}\r\n        setHidden={setHidden}\r\n        handleSearch={handleSearch}\r\n      />\r\n\r\n      {invalidPokemon && (\r\n        <div\r\n          className=\"alert alert-warning alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          <div>\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/whos_that_pokemon.png\"}\r\n              alt=\"who's that pokemon - error\"\r\n              width=\"50\"\r\n              height=\"60\"\r\n            ></img>\r\n          </div>\r\n\r\n          <strong> Who's that Pokemon? Please enter valid Pokemon name.</strong>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {pokemonData && !searchCardLoaded && !invalidPokemon && (\r\n        <div\r\n          className=\"d-inline-flex align-items-center justify-content-center\"\r\n          style={{ height: \"423px\" }}\r\n        >\r\n          <RotateLoader loading={!searchCardLoaded} size={15} />\r\n        </div>\r\n      )}\r\n\r\n      {searchCardLoaded && !hidden && (\r\n        <div>\r\n          <PokeCard\r\n            pokemonData={pokemonData}\r\n            pokemonTypes={pokemonTypes}\r\n            typeData={typeData}\r\n            imageLoaded={imageLoaded}\r\n            setImageLoaded={setImageLoaded}\r\n            fromList={false}\r\n            setHidden={setHidden}\r\n            abilitiesData={abilitiesData}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchCard);\r\n","C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\components\\AbilityBlock.js",["29","30","31"],"C:\\Users\\acer\\Desktop\\web dev\\pokeviewer\\src\\App.js",[],{"ruleId":"32","severity":1,"message":"33","line":165,"column":37,"nodeType":"34","messageId":"35","endLine":165,"endColumn":38},{"ruleId":"32","severity":1,"message":"33","line":168,"column":35,"nodeType":"34","messageId":"35","endLine":168,"endColumn":36},{"ruleId":"32","severity":1,"message":"33","line":168,"column":57,"nodeType":"34","messageId":"35","endLine":168,"endColumn":58},{"ruleId":"36","severity":1,"message":"37","line":57,"column":6,"nodeType":"38","endLine":57,"endColumn":42,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"40","line":96,"column":6,"nodeType":"38","endLine":96,"endColumn":19,"suggestions":"41"},{"ruleId":"36","severity":1,"message":"40","line":128,"column":6,"nodeType":"38","endLine":128,"endColumn":19,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":7,"nodeType":"45","messageId":"46","endLine":3,"endColumn":15},{"ruleId":"32","severity":1,"message":"33","line":16,"column":19,"nodeType":"34","messageId":"35","endLine":16,"endColumn":20},{"ruleId":"32","severity":1,"message":"33","line":16,"column":41,"nodeType":"34","messageId":"35","endLine":16,"endColumn":42},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setHidden', 'setLastViewedPokemon', and 'setSearchCardLoaded'. Either include them or remove the dependency array. If 'setSearchCardLoaded' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["47"],"React Hook useEffect has missing dependencies: 'setHidden' and 'setSearchCardLoaded'. Either include them or remove the dependency array. If 'setHidden' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["48"],["49"],"no-unused-vars","'getColor' is assigned a value but never used.","Identifier","unusedVar",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},{"desc":"52","fix":"54"},"Update the dependencies array to be: [latestSubmittedString, pokemonData, setHidden, setLastViewedPokemon, setSearchCardLoaded]",{"range":"55","text":"56"},"Update the dependencies array to be: [pokemonData, setHidden, setSearchCardLoaded]",{"range":"57","text":"58"},{"range":"59","text":"58"},[1776,1812],"[latestSubmittedString, pokemonData, setHidden, setLastViewedPokemon, setSearchCardLoaded]",[2883,2896],"[pokemonData, setHidden, setSearchCardLoaded]",[3796,3809]]