{"version":3,"sources":["components/SearchBar.js","components/TypeBlock.js","components/DamageRelations.js","components/SearchCardPic.js","components/PokeCard.js","components/SearchCard.js","components/PokeList.js","App.js","index.js"],"names":["SearchBar","pokemonName","handleSubmit","setPokemonName","setCurURL","useContext","setCurURLContext","className","href","src","process","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","map","offset","idx","onClick","style","marginLeft","marginRight","onSubmit","placeholder","value","onChange","e","target","React","memo","getStyle","bgColor","color","backgroundColor","display","fontSize","borderRadius","margin","TypeBlock","toUpperCase","DamageRelations","typeData","v","i","double_damage_to","length","t","half_damage_from","no_damage_from","double_damage_from","half_damage_to","no_damage_to","SearchCardPic","pokemonID","imageLoaded","setImageLoaded","fromList","useState","imageUnavailable","setImageUnavailable","useEffect","source","axios","CancelToken","get","token","then","catch","err","isCancel","cancel","border","onLoad","position","top","left","transform","loading","size","PokeCard","pokemonData","pokemonTypes","listImageLoaded","setListImageLoaded","name","SearchCard","latestSubmittedString","setLatestSubmittedString","setPokemonData","setPokemonTypes","setTypeData","invalidPokemon","SetInvalidPokemon","isMounted","useRef","a","current","prevPokemon","toLowerCase","cancelToken","res","data","getPokemonData","strongWeakData","typeArray","types","push","typeRes","tData","damage_relations","Object","fromEntries","entries","getTypeData","event","preventDefault","window","scroll","behavior","data-dismiss","aria-hidden","PokeList","CurURLContext","curURL","currentList","setcurrentList","prevURL","setPrevURL","nextURL","setNextURL","setLoading","error","setError","resData","previous","next","requestList","Array","pokemonDataList","results","url","all","spread","responses","getList","onPrevClick","onNextClick","createContext","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c07bbed.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { setCurURLContext } from \"../App\";\r\n\r\nfunction SearchBar({ pokemonName, handleSubmit, setPokemonName }) {\r\n  const setCurURL = useContext(setCurURLContext);\r\n\r\n  const genOffsets = [0, 151, 251, 386, 493, 649, 721, 809];\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top py-1\">\r\n      <a className=\"navbar-brand\" href=\"/#\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/favicon-32x32.png\"}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"\"\r\n        />\r\n        {` `}\r\n        PokeViewer\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div\r\n        className=\"collapse navbar-collapse nav-item\"\r\n        id=\"navbarSupportedContent\"\r\n      >\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <button\r\n            id=\"btnGroupDrop1\"\r\n            type=\"button\"\r\n            className=\"btn btn-secondary dropdown-toggle\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Generations\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n            {genOffsets.map((offset, idx) => (\r\n              <a\r\n                key={idx + 1}\r\n                className=\"dropdown-item\"\r\n                href=\"/#\"\r\n                onClick={() =>\r\n                  setCurURL(\r\n                    `https://pokeapi.co/api/v2/pokemon/?limit=20&offset=${offset}`\r\n                  )\r\n                }\r\n              >\r\n                Gen {idx + 1}\r\n              </a>\r\n            ))}\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"/#\"\r\n              onClick={() =>\r\n                setCurURL(\r\n                  `https://pokeapi.co/api/v2/pokemon/?limit=20&offset=898`\r\n                )\r\n              }\r\n            >\r\n              And more!\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <form\r\n          style={{ marginLeft: \"auto\", marginRight: 0 }}\r\n          onSubmit={handleSubmit}\r\n          className=\"form-inline my-2 my-md-0\"\r\n        >\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search Pokemon \"\r\n            aria-label=\"Search\"\r\n            value={pokemonName}\r\n            onChange={(e) => {\r\n              setPokemonName(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchBar);\r\n","import React from \"react\";\r\n\r\nconst getStyle = (type) => {\r\n  let bgColor = \"black\",\r\n    color = \"white\";\r\n\r\n  switch (type) {\r\n    case \"bug\":\r\n      bgColor = \"#729f3f\";\r\n      break;\r\n    case \"dragon\":\r\n      bgColor = \"#fccbad\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fairy\":\r\n      bgColor = \"#fdb9e9\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fire\":\r\n      bgColor = \"#fd7d24\";\r\n      break;\r\n    case \"ghost\":\r\n      bgColor = \"#7b62a3\";\r\n      break;\r\n    case \"ground\":\r\n      bgColor = \"#774629\";\r\n      break;\r\n    case \"normal\":\r\n      bgColor = \"#a4acaf\";\r\n      color = \"black\";\r\n      break;\r\n    case \"psychic\":\r\n      bgColor = \"#f366b9\";\r\n      break;\r\n    case \"steel\":\r\n      bgColor = \"#9eb7b8\";\r\n      color = \"black\";\r\n      break;\r\n    case \"dark\":\r\n      bgColor = \"#707070\";\r\n      break;\r\n    case \"electric\":\r\n      bgColor = \"#eed535\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fighting\":\r\n      bgColor = \"#d56723\";\r\n      break;\r\n    case \"flying\":\r\n      bgColor = \"#3dc7ef\";\r\n      color = \"black\";\r\n      break;\r\n    case \"grass\":\r\n      bgColor = \"#9bcc50\";\r\n      color = \"black\";\r\n      break;\r\n    case \"ice\":\r\n      bgColor = \"#51c4e7\";\r\n      color = \"black\";\r\n      break;\r\n    case \"poison\":\r\n      bgColor = \"#b97fc9\";\r\n      break;\r\n    case \"rock\":\r\n      bgColor = \"#a38c21\";\r\n      break;\r\n    case \"water\":\r\n      bgColor = \"#4592c4\";\r\n      break;\r\n    case \"none\":\r\n      bgColor = \"white\";\r\n      color = \"black\";\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return {\r\n    backgroundColor: `${bgColor}`,\r\n    color: `${color}`,\r\n    display: \"inline-block\",\r\n    height: \"17px\",\r\n    width: \"73px\",\r\n    fontSize: \"11px\",\r\n    borderRadius: \"3px\",\r\n    margin: \"1px\",\r\n  };\r\n};\r\n\r\nfunction TypeBlock({ type }) {\r\n  return (\r\n    <div className=\"col\" style={getStyle(type)}>\r\n      {`${type}`.toUpperCase()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TypeBlock);\r\n","import React from \"react\";\r\nimport TypeBlock from \"./TypeBlock\";\r\n\r\nfunction DamageRelations({ typeData }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            {typeData.map((v, i) => (\r\n              <div className=\"col\" key={i}>\r\n                <TypeBlock type={typeData[i].type} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Double damage to: </div>\r\n\r\n                    {(!typeData[i].double_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].double_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Half damage from: </div>\r\n\r\n                    {(!typeData[i].half_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].half_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">No damage from: </div>\r\n                    {(!typeData[i].no_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].no_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <hr className=\"rounded\" />\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Double damage from: </div>\r\n\r\n                    {(!typeData[i].double_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].double_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Half damage to: </div>\r\n\r\n                    {(!typeData[i].half_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].half_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">No damage to: </div>\r\n\r\n                    {(!typeData[i].no_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].no_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(DamageRelations);\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction SearchCardPic({ pokemonID, imageLoaded, setImageLoaded, fromList }) {\r\n  const [imageUnavailable, setImageUnavailable] = useState(false);\r\n\r\n  const [width, height] = !fromList ? [\"250px\", \"300px\"] : [\"200px\", \"240px\"];\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    try {\r\n      axios\r\n        .get(\r\n          `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonID}.png`,\r\n          { CancelToken: source.token }\r\n        )\r\n        .then()\r\n        .catch(() => setImageUnavailable(true));\r\n    } catch (err) {\r\n      if (!axios.isCancel(err)) {\r\n        throw err;\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [pokemonID]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#f2f2f2\", border: \"1px solid black\" }}>\r\n      <img\r\n        alt=\"pokemon\"\r\n        src={\r\n          !imageUnavailable\r\n            ? `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonID}.png`\r\n            : process.env.PUBLIC_URL + \"/ms-icon-70x70.png\"\r\n        }\r\n        width={width}\r\n        height={height}\r\n        style={!imageLoaded ? { display: \"none\" } : {}}\r\n        onLoad={() => setImageLoaded(true)}\r\n      ></img>\r\n      {imageLoaded && imageUnavailable && (\r\n        <div\r\n          className=\"lead\"\r\n          style={{\r\n            fontSize: \"15px\",\r\n            position: \"absolute\",\r\n            top: \"60%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-20%, -50%)\",\r\n          }}\r\n        >\r\n          <strong>\r\n            <em>One day it will load its way out...</em>\r\n          </strong>\r\n        </div>\r\n      )}\r\n\r\n      {!imageLoaded && (\r\n        <div\r\n          className=\"d-inline-flex align-items-center justify-content-center\"\r\n          style={{ width: `${width}`, height: `${height}` }}\r\n        >\r\n          <div>\r\n            <ClipLoader loading={!imageLoaded} size={150} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchCardPic);\r\n","import React, { useState } from \"react\";\r\nimport DamageRelations from \"./DamageRelations\";\r\nimport SearchCardPic from \"./SearchCardPic\";\r\nimport TypeBlock from \"./TypeBlock\";\r\n\r\nfunction PokeCard({\r\n  pokemonData,\r\n  pokemonTypes,\r\n  typeData,\r\n  imageLoaded,\r\n  setImageLoaded,\r\n  fromList,\r\n}) {\r\n  const [listImageLoaded, setListImageLoaded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container mt-5 \">\r\n      {pokemonData && (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-auto mx-auto jumbotron p-3 mb-15\"\r\n              style={{ border: \"1px solid black\", borderRadius: \"20px\" }}\r\n            >\r\n              <SearchCardPic\r\n                pokemonID={pokemonData.id}\r\n                imageLoaded={!fromList ? imageLoaded : listImageLoaded}\r\n                setImageLoaded={!fromList ? setImageLoaded : setListImageLoaded}\r\n                fromList={fromList}\r\n              />\r\n\r\n              <div className=\"text-uppercase font-weight-bold\">\r\n                #{pokemonData.id} {pokemonData.name}\r\n              </div>\r\n\r\n              <div className=\"m-1\">\r\n                {pokemonTypes.map((t) => (\r\n                  <TypeBlock type={t} key={t} />\r\n                ))}\r\n              </div>\r\n\r\n              {!fromList && (\r\n                <button\r\n                  className=\"btn btn-secondary btn-sm\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseExample\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseExample\"\r\n                >\r\n                  Damage Relations\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {!fromList && (\r\n            <div>\r\n              <div\r\n                className=\"collapse jumbotron p-2\"\r\n                id=\"collapseExample\"\r\n                style={{ border: \"1.5px solid black\" }}\r\n              >\r\n                <DamageRelations typeData={typeData} />\r\n              </div>\r\n              <hr className=\"rounded\" style={{ width: \"80%\" }} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PokeCard);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PokeCard from \"./PokeCard\";\r\n\r\nfunction SearchCard() {\r\n  const [latestSubmittedString, setLatestSubmittedString] = useState(\"\");\r\n  const [pokemonName, setPokemonName] = useState(\"\");\r\n  const [pokemonData, setPokemonData] = useState(null);\r\n  const [pokemonTypes, setPokemonTypes] = useState([]);\r\n  const [typeData, setTypeData] = useState([]);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [invalidPokemon, SetInvalidPokemon] = useState(false);\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    const getPokemonData = async () => {\r\n      if (isMounted.current) {\r\n        try {\r\n          const prevPokemon = pokemonData ? pokemonData.name : null;\r\n\r\n          const res = await axios.get(\r\n            `https://pokeapi.co/api/v2/pokemon/${latestSubmittedString.toLowerCase()}/`,\r\n            {\r\n              cancelToken: source.token,\r\n            }\r\n          );\r\n\r\n          if (res.data.name !== prevPokemon) {\r\n            setPokemonData(res.data);\r\n            setImageLoaded(false);\r\n          }\r\n        } catch (err) {\r\n          if (!axios.isCancel(err)) SetInvalidPokemon(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    getPokemonData();\r\n    return () => source.cancel();\r\n  }, [latestSubmittedString, pokemonData]);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    const getTypeData = async () => {\r\n      if (isMounted.current) {\r\n        let strongWeakData = [];\r\n        let typeArray = [];\r\n\r\n        for (const t of pokemonData.types) {\r\n          let type = t.type.name;\r\n          typeArray.push(type);\r\n          const typeRes = await axios.get(\r\n            `https://pokeapi.co/api/v2/type/${type}/`,\r\n            { cancelToken: source.token }\r\n          );\r\n\r\n          let tData = typeRes.data.damage_relations;\r\n          tData = Object.fromEntries(\r\n            Object.entries(tData).map(([key, types]) => [\r\n              key,\r\n              types.map((t) => t.name),\r\n            ])\r\n          );\r\n          tData.type = type;\r\n          strongWeakData.push(tData);\r\n        }\r\n\r\n        setTypeData(strongWeakData);\r\n        setPokemonTypes(typeArray);\r\n      } else {\r\n        isMounted.current = true;\r\n      }\r\n    };\r\n    getTypeData();\r\n\r\n    return () => source.cancel();\r\n  }, [pokemonData]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    SetInvalidPokemon(false);\r\n    setLatestSubmittedString(pokemonName);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"auto\" }}>\r\n      <SearchBar\r\n        pokemonName={pokemonName}\r\n        handleSubmit={handleSubmit}\r\n        setPokemonName={setPokemonName}\r\n      />\r\n\r\n      {invalidPokemon && (\r\n        <div\r\n          className=\"alert alert-warning alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          <strong>Who's that Pokemon? Please enter valid Pokemon name.</strong>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <PokeCard\r\n        pokemonData={pokemonData}\r\n        pokemonTypes={pokemonTypes}\r\n        typeData={typeData}\r\n        imageLoaded={imageLoaded}\r\n        setImageLoaded={setImageLoaded}\r\n        fromList={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchCard);\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport PokeCard from \"./PokeCard\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { CurURLContext } from \"../App\";\r\n\r\nfunction PokeList() {\r\n  const [curURL, setCurURL] = useContext(CurURLContext);\r\n  const [currentList, setcurrentList] = useState([]);\r\n  const [prevURL, setPrevURL] = useState(null);\r\n  const [nextURL, setNextURL] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    setError(false);\r\n\r\n    const getList = async (curURL) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const res = await axios.get(curURL, {\r\n          cancelToken: source.token,\r\n        });\r\n        const resData = res.data;\r\n        setPrevURL(resData.previous);\r\n        setNextURL(resData.next);\r\n\r\n        const requestList = new Array(20);\r\n        const pokemonDataList = new Array(20);\r\n\r\n        try {\r\n          for (let i = 0; i < resData.results.length; i++) {\r\n            requestList[i] = axios.get(resData.results[i].url, {\r\n              cancelToken: source.token,\r\n            });\r\n          }\r\n\r\n          await axios.all(requestList).then(\r\n            axios.spread((...responses) => {\r\n              for (let i = 0; i < resData.results.length; i++) {\r\n                pokemonDataList[i] = responses[i].data;\r\n              }\r\n            })\r\n          );\r\n\r\n          setcurrentList(pokemonDataList);\r\n          setLoading(false);\r\n        } catch (err) {\r\n          if (!axios.isCancel(err)) {\r\n            setError(true);\r\n            throw err;\r\n          }\r\n        }\r\n      } catch (err) {\r\n        if (!axios.isCancel(err)) {\r\n          setError(true);\r\n          throw err;\r\n        }\r\n      }\r\n    };\r\n\r\n    getList(curURL);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [curURL]);\r\n\r\n  const onPrevClick = async () => {\r\n    setCurURL(prevURL);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const onNextClick = async () => {\r\n    setCurURL(nextURL);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loading && !error && (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <HashLoader loading={loading} size={40} />\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div\r\n          className=\"alert alert-warning alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/surprised-pikachu.png\"}\r\n            alt=\"Surprised pikachu - error\"\r\n            width=\"50\"\r\n            height=\"60\"\r\n          ></img>\r\n          <strong>\r\n            {\" \"}\r\n            Error at PokeAPI end! Try going to the next or previous page.\r\n          </strong>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {!loading && (\r\n        <div>\r\n          <div className=\"row\">\r\n            {currentList.map((pokemonData) => (\r\n              <div className=\"col-auto m-auto\" key={pokemonData.name}>\r\n                <PokeCard\r\n                  pokemonData={pokemonData}\r\n                  pokemonTypes={pokemonData.types.map((t) => t.type.name)}\r\n                  fromList={true}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-bottom py-1\">\r\n        <div className=\"m-auto\">\r\n          {prevURL && (\r\n            <button\r\n              className=\"btn btn-md btn-light my-2 my-sm-0 mr-2\"\r\n              onClick={onPrevClick}\r\n            >\r\n              Previous\r\n            </button>\r\n          )}\r\n          {nextURL && (\r\n            <button\r\n              className=\"btn btn-md btn-light my-2 my-sm-0\"\r\n              onClick={onNextClick}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PokeList);\r\n","import React, { useState } from \"react\";\nimport SearchCard from \"./components/SearchCard\";\nimport PokeList from \"./components/PokeList\";\nimport \"./App.css\";\n\nexport const CurURLContext = React.createContext();\nexport const setCurURLContext = React.createContext();\n\nfunction App() {\n  const [curURL, setCurURL] = useState(\"https://pokeapi.co/api/v2/pokemon\");\n\n  return (\n    <div className=\"App\">\n      <setCurURLContext.Provider value={setCurURL}>\n        <SearchCard />\n      </setCurURLContext.Provider>\n\n      <CurURLContext.Provider value={[curURL, setCurURL]}>\n        <PokeList />\n      </CurURLContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}