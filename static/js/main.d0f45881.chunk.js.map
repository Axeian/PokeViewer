{"version":3,"sources":["components/SearchBar.js","components/TypeBlock.js","components/DamageRelations.js","components/SearchCardPic.js","components/PokeCard.js","components/SearchCard.js","components/PokeList.js","App.js","index.js"],"names":["SearchBar","pokemonName","handleSubmit","setPokemonName","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onSubmit","placeholder","value","onChange","e","target","React","memo","getStyle","bgColor","color","backgroundColor","display","height","width","fontSize","borderRadius","margin","TypeBlock","style","toUpperCase","DamageRelations","typeData","map","v","i","double_damage_to","length","t","half_damage_from","no_damage_from","double_damage_from","half_damage_to","no_damage_to","SearchCardPic","pokemonID","imageLoaded","setImageLoaded","fromList","border","alt","src","onLoad","loading","size","PokeCard","pokemonData","pokemonTypes","useState","listImageLoaded","setListImageLoaded","name","SearchCard","latestSubmittedString","setLatestSubmittedString","setPokemonData","setPokemonTypes","setTypeData","invalidPokemon","SetInvalidPokemon","isMounted","useRef","useEffect","source","axios","CancelToken","a","current","prevPokemon","get","toLowerCase","cancelToken","token","res","data","isCancel","getPokemonData","cancel","strongWeakData","typeArray","types","push","typeRes","tData","damage_relations","Object","fromEntries","entries","getTypeData","event","preventDefault","window","scroll","top","left","behavior","role","data-dismiss","aria-hidden","PokeList","curURL","setCurURL","currentList","setcurrentList","prevURL","setPrevURL","nextURL","setNextURL","setLoading","resData","previous","next","pokemonDataList","results","url","pokeRes","getList","onPrevClick","onNextClick","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0f45881.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction SearchBar({ pokemonName, handleSubmit, setPokemonName }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top py-1\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        PokeViewer\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <form onSubmit={handleSubmit} className=\"form-inline my-2 my-md-0\">\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search Pokemon \"\r\n            aria-label=\"Search\"\r\n            value={pokemonName}\r\n            onChange={(e) => {\r\n              setPokemonName(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchBar);\r\n","import React from \"react\";\r\n\r\nconst getStyle = (type) => {\r\n  let bgColor = \"black\",\r\n    color = \"white\";\r\n\r\n  switch (type) {\r\n    case \"bug\":\r\n      bgColor = \"#729f3f\";\r\n      break;\r\n    case \"dragon\":\r\n      bgColor = \"#fccbad\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fairy\":\r\n      bgColor = \"#fdb9e9\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fire\":\r\n      bgColor = \"#fd7d24\";\r\n      break;\r\n    case \"ghost\":\r\n      bgColor = \"#7b62a3\";\r\n      break;\r\n    case \"ground\":\r\n      bgColor = \"#774629\";\r\n      break;\r\n    case \"normal\":\r\n      bgColor = \"#a4acaf\";\r\n      color = \"black\";\r\n      break;\r\n    case \"psychic\":\r\n      bgColor = \"#f366b9\";\r\n      break;\r\n    case \"steel\":\r\n      bgColor = \"#9eb7b8\";\r\n      color = \"black\";\r\n      break;\r\n    case \"dark\":\r\n      bgColor = \"#707070\";\r\n      break;\r\n    case \"electric\":\r\n      bgColor = \"#eed535\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fighting\":\r\n      bgColor = \"#d56723\";\r\n      break;\r\n    case \"flying\":\r\n      bgColor = \"#3dc7ef\";\r\n      color = \"black\";\r\n      break;\r\n    case \"grass\":\r\n      bgColor = \"#9bcc50\";\r\n      color = \"black\";\r\n      break;\r\n    case \"ice\":\r\n      bgColor = \"#51c4e7\";\r\n      color = \"black\";\r\n      break;\r\n    case \"poison\":\r\n      bgColor = \"#b97fc9\";\r\n      break;\r\n    case \"rock\":\r\n      bgColor = \"#a38c21\";\r\n      break;\r\n    case \"water\":\r\n      bgColor = \"#4592c4\";\r\n      break;\r\n    case \"none\":\r\n      bgColor = \"white\";\r\n      color = \"black\";\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return {\r\n    backgroundColor: `${bgColor}`,\r\n    color: `${color}`,\r\n    display: \"inline-block\",\r\n    height: \"17px\",\r\n    width: \"73px\",\r\n    fontSize: \"11px\",\r\n    borderRadius: \"3px\",\r\n    margin: \"1px\",\r\n  };\r\n};\r\n\r\nfunction TypeBlock({ type }) {\r\n  return (\r\n    <div className=\"col\" style={getStyle(type)}>\r\n      {`${type}`.toUpperCase()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TypeBlock);\r\n","import React from \"react\";\r\nimport TypeBlock from \"./TypeBlock\";\r\n\r\nfunction DamageRelations({ typeData }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            {typeData.map((v, i) => (\r\n              <div className=\"col\" key={i}>\r\n                <TypeBlock type={typeData[i].type} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Double damage to: </div>\r\n\r\n                    {(!typeData[i].double_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].double_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Half damage from: </div>\r\n\r\n                    {(!typeData[i].half_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].half_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">No damage from: </div>\r\n                    {(!typeData[i].no_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].no_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <hr className=\"rounded\" />\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Double damage from: </div>\r\n\r\n                    {(!typeData[i].double_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].double_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Half damage to: </div>\r\n\r\n                    {(!typeData[i].half_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].half_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">No damage to: </div>\r\n\r\n                    {(!typeData[i].no_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].no_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(DamageRelations);\r\n","import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction SearchCardPic({ pokemonID, imageLoaded, setImageLoaded, fromList }) {\r\n  const [width, height] = !fromList ? [\"250px\", \"300px\"] : [\"200px\", \"240px\"];\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#f2f2f2\", border: \"1px solid black\" }}>\r\n      <img\r\n        alt=\"pokemon\"\r\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonID}.png`}\r\n        width={width}\r\n        height={height}\r\n        style={!imageLoaded ? { display: \"none\" } : {}}\r\n        onLoad={() => setImageLoaded(true)}\r\n      ></img>\r\n\r\n      {!imageLoaded && (\r\n        <div\r\n          className=\"d-inline-flex align-items-center justify-content-center\"\r\n          style={{ width: `${width}`, height: `${height}` }}\r\n        >\r\n          <div>\r\n            <ClipLoader loading={!imageLoaded} size={150} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchCardPic);\r\n","import React, { useState } from \"react\";\r\nimport DamageRelations from \"./DamageRelations\";\r\nimport SearchCardPic from \"./SearchCardPic\";\r\nimport TypeBlock from \"./TypeBlock\";\r\n\r\nfunction PokeCard({\r\n  pokemonData,\r\n  pokemonTypes,\r\n  typeData,\r\n  imageLoaded,\r\n  setImageLoaded,\r\n  fromList,\r\n}) {\r\n  const [listImageLoaded, setListImageLoaded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container mt-5 \">\r\n      {pokemonData && (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-auto mx-auto jumbotron p-3 mb-15\"\r\n              style={{ border: \"1px solid black\", borderRadius: \"20px\" }}\r\n            >\r\n              <SearchCardPic\r\n                pokemonID={pokemonData.id}\r\n                imageLoaded={!fromList ? imageLoaded : listImageLoaded}\r\n                setImageLoaded={!fromList ? setImageLoaded : setListImageLoaded}\r\n                fromList={fromList}\r\n              />\r\n\r\n              <div className=\"text-uppercase font-weight-bold\">\r\n                #{pokemonData.id} {pokemonData.name}\r\n              </div>\r\n\r\n              <div className=\"m-1\">\r\n                {pokemonTypes.map((t) => (\r\n                  <TypeBlock type={t} key={t} />\r\n                ))}\r\n              </div>\r\n\r\n              {!fromList && (\r\n                <button\r\n                  className=\"btn btn-secondary btn-sm\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseExample\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseExample\"\r\n                >\r\n                  Damage Relations\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {!fromList && (\r\n            <div>\r\n              <div\r\n                className=\"collapse jumbotron p-2\"\r\n                id=\"collapseExample\"\r\n                style={{ border: \"1.5px solid black\" }}\r\n              >\r\n                <DamageRelations typeData={typeData} />\r\n              </div>\r\n              <hr className=\"rounded\" style={{ width: \"80%\" }} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PokeCard);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PokeCard from \"./PokeCard\";\r\n\r\nfunction SearchCard() {\r\n  const [latestSubmittedString, setLatestSubmittedString] = useState(\"\");\r\n  const [pokemonName, setPokemonName] = useState(\"\");\r\n  const [pokemonData, setPokemonData] = useState(null);\r\n  const [pokemonTypes, setPokemonTypes] = useState([]);\r\n  const [typeData, setTypeData] = useState([]);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [invalidPokemon, SetInvalidPokemon] = useState(false);\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    const getPokemonData = async () => {\r\n      if (isMounted.current) {\r\n        try {\r\n          const prevPokemon = pokemonData ? pokemonData.name : null;\r\n          const res = await axios.get(\r\n            `https://pokeapi.co/api/v2/pokemon/${latestSubmittedString.toLowerCase()}/`,\r\n            {\r\n              cancelToken: source.token,\r\n            }\r\n          );\r\n\r\n          if (res.data.name !== prevPokemon) {\r\n            setPokemonData(res.data);\r\n            setImageLoaded(false);\r\n          }\r\n        } catch (err) {\r\n          if (!axios.isCancel(err)) SetInvalidPokemon(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    getPokemonData();\r\n    return () => source.cancel();\r\n  }, [latestSubmittedString, pokemonData]);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    const getTypeData = async () => {\r\n      if (isMounted.current) {\r\n        let strongWeakData = [];\r\n        let typeArray = [];\r\n\r\n        for (const t of pokemonData.types) {\r\n          let type = t.type.name;\r\n          typeArray.push(type);\r\n          const typeRes = await axios.get(\r\n            `https://pokeapi.co/api/v2/type/${type}/`,\r\n            { cancelToken: source.token }\r\n          );\r\n\r\n          let tData = typeRes.data.damage_relations;\r\n          tData = Object.fromEntries(\r\n            Object.entries(tData).map(([key, types]) => [\r\n              key,\r\n              types.map((t) => t.name),\r\n            ])\r\n          );\r\n          tData.type = type;\r\n          strongWeakData.push(tData);\r\n        }\r\n\r\n        setTypeData(strongWeakData);\r\n        setPokemonTypes(typeArray);\r\n      } else {\r\n        isMounted.current = true;\r\n      }\r\n    };\r\n    getTypeData();\r\n\r\n    return () => source.cancel();\r\n  }, [pokemonData]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    SetInvalidPokemon(false);\r\n    setLatestSubmittedString(pokemonName);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"auto\" }}>\r\n      <SearchBar\r\n        pokemonName={pokemonName}\r\n        handleSubmit={handleSubmit}\r\n        setPokemonName={setPokemonName}\r\n      />\r\n\r\n      {invalidPokemon && (\r\n        <div\r\n          className=\"alert alert-warning alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          <strong>Who's that Pokemon? Please enter valid Pokemon name.</strong>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <PokeCard\r\n        pokemonData={pokemonData}\r\n        pokemonTypes={pokemonTypes}\r\n        typeData={typeData}\r\n        imageLoaded={imageLoaded}\r\n        setImageLoaded={setImageLoaded}\r\n        fromList={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchCard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport PokeCard from \"./PokeCard\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nfunction PokeList() {\r\n  const [curURL, setCurURL] = useState(\"https://pokeapi.co/api/v2/pokemon\");\r\n  const [currentList, setcurrentList] = useState([]);\r\n  const [prevURL, setPrevURL] = useState(null);\r\n  const [nextURL, setNextURL] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    const getList = async (curURL) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const res = await axios.get(curURL, {\r\n          cancelToken: source.token,\r\n        });\r\n        const resData = res.data;\r\n        setPrevURL(resData.previous);\r\n        setNextURL(resData.next);\r\n\r\n        const pokemonDataList = [];\r\n\r\n        try {\r\n          for (let i = 0; i < resData.results.length; i++) {\r\n            const pokeRes = await axios(resData.results[i].url, {\r\n              cancelToken: source.token,\r\n            });\r\n\r\n            pokemonDataList.push(pokeRes.data);\r\n          }\r\n\r\n          setcurrentList(pokemonDataList);\r\n          setLoading(false);\r\n        } catch (err) {\r\n          if (!axios.isCancel(err)) throw err;\r\n        }\r\n      } catch (err) {\r\n        if (!axios.isCancel(err)) throw err;\r\n      }\r\n    };\r\n\r\n    getList(curURL);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [curURL]);\r\n\r\n  const onPrevClick = async () => {\r\n    setCurURL(prevURL);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const onNextClick = async () => {\r\n    setCurURL(nextURL);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loading && (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <HashLoader loading={loading} size={40} />\r\n        </div>\r\n      )}\r\n\r\n      {!loading && (\r\n        <div>\r\n          <div className=\"row\">\r\n            {currentList.map((pokemonData) => (\r\n              <div className=\"col-auto m-auto\" key={pokemonData.name}>\r\n                <PokeCard\r\n                  pokemonData={pokemonData}\r\n                  pokemonTypes={pokemonData.types.map((t) => t.type.name)}\r\n                  fromList={true}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-bottom py-1\">\r\n        <div className=\"m-auto\">\r\n          {prevURL && (\r\n            <button\r\n              className=\"btn btn-md btn-light my-2 my-sm-0 mr-2\"\r\n              onClick={onPrevClick}\r\n            >\r\n              Previous\r\n            </button>\r\n          )}\r\n          {nextURL && (\r\n            <button\r\n              className=\"btn btn-md btn-light my-2 my-sm-0\"\r\n              onClick={onNextClick}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PokeList);\r\n","import \"./App.css\";\nimport SearchCard from \"./components/SearchCard\";\nimport PokeList from \"./components/PokeList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchCard />\n\n      <PokeList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}