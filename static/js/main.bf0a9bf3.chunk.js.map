{"version":3,"sources":["components/SearchBar.js","components/TypeBlock.js","components/DamageRelations.js","components/SearchCardPic.js","components/PokeCard.js","components/SearchCard.js","components/PokeList.js","App.js","index.js"],"names":["SearchBar","pokemonName","handleSubmit","setPokemonName","setHidden","setCurURL","useContext","setCurURLContext","className","href","onClick","src","process","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","map","offset","idx","style","marginLeft","marginRight","onSubmit","placeholder","value","onChange","e","target","React","memo","getStyle","bgColor","color","backgroundColor","display","fontSize","borderRadius","margin","TypeBlock","toUpperCase","DamageRelations","typeData","v","i","double_damage_to","length","t","half_damage_from","no_damage_from","double_damage_from","half_damage_to","no_damage_to","SearchCardPic","pokemonID","imageLoaded","setImageLoaded","fromList","shiny","shinyContext","border","onLoad","onError","onerror","loading","size","PokeCard","pokemonData","pokemonTypes","useState","listImageLoaded","setListImageLoaded","hover","setHover","setLatestSubmittedString","setLatestSubmittedStringContext","setSearchCardLoaded","setSearchCardLoadedContext","hiddenContext","fromListsetHidden","lastViewedPokemon","lastViewedPokemonContext","useEffect","cursor","boxShadow","name","window","scroll","top","left","behavior","onMouseOver","onMouseLeave","position","aria-hidden","SearchCard","searchCardLoaded","latestSubmittedString","hidden","setLastViewedPokemon","setPokemonData","setPokemonTypes","setTypeData","invalidPokemon","SetInvalidPokemon","isMounted","useRef","source","axios","CancelToken","a","current","prevPokemon","get","toLowerCase","cancelToken","token","res","data","isCancel","getPokemonData","cancel","strongWeakData","typeArray","types","push","typeRes","tData","damage_relations","Object","fromEntries","entries","getTypeData","event","preventDefault","PokeList","curURL","setShiny","currentList","setcurrentList","prevURL","setPrevURL","nextURL","setNextURL","setLoading","error","setError","resData","previous","next","requestList","Array","pokemonDataList","results","url","all","then","spread","responses","getList","onPrevClick","onNextClick","data-dismiss","createContext","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf0a9bf3.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { setCurURLContext } from \"../App\";\r\n\r\nfunction SearchBar({ pokemonName, handleSubmit, setPokemonName, setHidden }) {\r\n  const setCurURL = useContext(setCurURLContext);\r\n\r\n  const genOffsets = [0, 151, 251, 386, 493, 649, 721, 809];\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top py-1\">\r\n      <a\r\n        className=\"navbar-brand\"\r\n        href=\"#\"\r\n        onClick={() => {\r\n          setCurURL(`https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0`);\r\n          setHidden(true);\r\n        }}\r\n      >\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/favicon-32x32.png\"}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"\"\r\n        />\r\n        {` `}\r\n        PokeViewer\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div\r\n        className=\"collapse navbar-collapse nav-item\"\r\n        id=\"navbarSupportedContent\"\r\n      >\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <button\r\n            id=\"btnGroupDrop1\"\r\n            type=\"button\"\r\n            className=\"btn btn-secondary dropdown-toggle\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Generations\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n            {genOffsets.map((offset, idx) => (\r\n              <a\r\n                key={idx + 1}\r\n                className=\"dropdown-item\"\r\n                href=\"#\"\r\n                onClick={() =>\r\n                  setCurURL(\r\n                    `https://pokeapi.co/api/v2/pokemon/?limit=20&offset=${offset}`\r\n                  )\r\n                }\r\n              >\r\n                Gen {idx + 1}\r\n              </a>\r\n            ))}\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"#\"\r\n              onClick={() =>\r\n                setCurURL(\r\n                  `https://pokeapi.co/api/v2/pokemon/?limit=20&offset=898`\r\n                )\r\n              }\r\n            >\r\n              And more!\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <form\r\n          style={{ marginLeft: \"auto\", marginRight: 0 }}\r\n          onSubmit={handleSubmit}\r\n          className=\"form-inline my-2 my-md-0\"\r\n        >\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search Pokemon \"\r\n            aria-label=\"Search\"\r\n            value={pokemonName}\r\n            onChange={(e) => {\r\n              setPokemonName(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchBar);\r\n","import React from \"react\";\r\n\r\nconst getStyle = (type) => {\r\n  let bgColor = \"black\",\r\n    color = \"white\";\r\n\r\n  switch (type) {\r\n    case \"bug\":\r\n      bgColor = \"#729f3f\";\r\n      break;\r\n    case \"dragon\":\r\n      bgColor = \"#fccbad\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fairy\":\r\n      bgColor = \"#fdb9e9\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fire\":\r\n      bgColor = \"#fd7d24\";\r\n      break;\r\n    case \"ghost\":\r\n      bgColor = \"#7b62a3\";\r\n      break;\r\n    case \"ground\":\r\n      bgColor = \"#774629\";\r\n      break;\r\n    case \"normal\":\r\n      bgColor = \"#a4acaf\";\r\n      color = \"black\";\r\n      break;\r\n    case \"psychic\":\r\n      bgColor = \"#f366b9\";\r\n      break;\r\n    case \"steel\":\r\n      bgColor = \"#9eb7b8\";\r\n      color = \"black\";\r\n      break;\r\n    case \"dark\":\r\n      bgColor = \"#707070\";\r\n      break;\r\n    case \"electric\":\r\n      bgColor = \"#eed535\";\r\n      color = \"black\";\r\n      break;\r\n    case \"fighting\":\r\n      bgColor = \"#d56723\";\r\n      break;\r\n    case \"flying\":\r\n      bgColor = \"#3dc7ef\";\r\n      color = \"black\";\r\n      break;\r\n    case \"grass\":\r\n      bgColor = \"#9bcc50\";\r\n      color = \"black\";\r\n      break;\r\n    case \"ice\":\r\n      bgColor = \"#51c4e7\";\r\n      color = \"black\";\r\n      break;\r\n    case \"poison\":\r\n      bgColor = \"#b97fc9\";\r\n      break;\r\n    case \"rock\":\r\n      bgColor = \"#a38c21\";\r\n      break;\r\n    case \"water\":\r\n      bgColor = \"#4592c4\";\r\n      break;\r\n    case \"none\":\r\n      bgColor = \"white\";\r\n      color = \"black\";\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return {\r\n    backgroundColor: `${bgColor}`,\r\n    color: `${color}`,\r\n    display: \"inline-block\",\r\n    height: \"17px\",\r\n    width: \"73px\",\r\n    fontSize: \"11px\",\r\n    borderRadius: \"3px\",\r\n    margin: \"1px\",\r\n  };\r\n};\r\n\r\nfunction TypeBlock({ type }) {\r\n  return (\r\n    <div className=\"col\" style={getStyle(type)}>\r\n      {`${type}`.toUpperCase()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TypeBlock);\r\n","import React from \"react\";\r\nimport TypeBlock from \"./TypeBlock\";\r\n\r\nfunction DamageRelations({ typeData }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            {typeData.map((v, i) => (\r\n              <div className=\"col\" key={i}>\r\n                <TypeBlock type={typeData[i].type} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Double damage to: </div>\r\n\r\n                    {(!typeData[i].double_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].double_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Half damage from: </div>\r\n\r\n                    {(!typeData[i].half_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].half_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">No damage from: </div>\r\n                    {(!typeData[i].no_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].no_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <hr className=\"rounded\" />\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Double damage from: </div>\r\n\r\n                    {(!typeData[i].double_damage_from.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].double_damage_from.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">Half damage to: </div>\r\n\r\n                    {(!typeData[i].half_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].half_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {typeData.map((v, i) => (\r\n                  <div className=\"col\" key={i}>\r\n                    <div className=\"font-weight-bold\">No damage to: </div>\r\n\r\n                    {(!typeData[i].no_damage_to.length && (\r\n                      <TypeBlock type=\"none\" />\r\n                    )) ||\r\n                      typeData[i].no_damage_to.map((t) => (\r\n                        <TypeBlock type={t} key={t} />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(DamageRelations);\r\n","import React, { useContext } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { shinyContext } from \"../App\";\r\n\r\nfunction SearchCardPic({ pokemonID, imageLoaded, setImageLoaded, fromList }) {\r\n  const shiny = useContext(shinyContext);\r\n\r\n  const [width, height] = !fromList ? [\"250px\", \"300px\"] : [\"200px\", \"240px\"];\r\n\r\n  // useEffect(() => {\r\n  //   let source = axios.CancelToken.source();\r\n  //   setImageLoaded(false);\r\n  //   try {\r\n  //     axios\r\n  //       .get(\r\n  //         `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonID}.png`,\r\n  //         { CancelToken: source.token }\r\n  //       )\r\n  //       .then()\r\n  //       .catch(() => setImageUnavailable(true));\r\n  //   } catch (err) {\r\n  //     if (!axios.isCancel(err)) {\r\n  //       throw err;\r\n  //     }\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     source.cancel();\r\n  //   };\r\n  // }, [pokemonID]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#f2f2f2\", border: \"1px solid black\" }}>\r\n      <img\r\n        alt=\"pokemon\"\r\n        src={\r\n          // !imageUnavailable\r\n          //   ?\r\n          `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n            shiny ? \"/shiny/\" : \"\"\r\n          }${pokemonID}.png`\r\n          //: process.env.PUBLIC_URL + \"/ms-icon-70x70.png\"\r\n        }\r\n        width={width}\r\n        height={height}\r\n        style={!imageLoaded ? { display: \"none\" } : {}}\r\n        onLoad={() => setImageLoaded(true)}\r\n        onError={(e) => {\r\n          e.target.onerror = null;\r\n          e.target.src = process.env.PUBLIC_URL + \"/image-not-found.png\";\r\n        }}\r\n      ></img>\r\n\r\n      {/* <button\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"top\"\r\n        title=\"Shiny-fy!\"\r\n        onClick={(e) => {\r\n          setShiny(!shiny);\r\n          setImageLoaded(false);\r\n          e.stopPropagation();\r\n        }}\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/shiny.jpg)`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"contain\",\r\n          height: \"22px\",\r\n          width: \"22px\",\r\n          position: \"absolute\",\r\n          top: \"6%\",\r\n          left: \"82%\",\r\n          borderRadius: \"50%\",\r\n          cursor: \"pointer\",\r\n          border: 0,\r\n        }}\r\n      ></button> */}\r\n\r\n      {/* {imageLoaded && imageUnavailable && (\r\n        <div\r\n          className=\"lead\"\r\n          style={{\r\n            fontSize: \"15px\",\r\n            position: \"absolute\",\r\n            top: \"60%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-20%, -50%)\",\r\n          }}\r\n        >\r\n          <strong>\r\n            <em>One day it will load its way out...</em>\r\n          </strong>\r\n        </div>\r\n      )} */}\r\n\r\n      {!imageLoaded && (\r\n        <div\r\n          className=\"d-inline-flex align-items-center justify-content-center\"\r\n          style={{ width: `${width}`, height: `${height}` }}\r\n        >\r\n          <div>\r\n            <ClipLoader loading={!imageLoaded} size={150} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchCardPic);\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport DamageRelations from \"./DamageRelations\";\r\nimport SearchCardPic from \"./SearchCardPic\";\r\nimport TypeBlock from \"./TypeBlock\";\r\nimport {\r\n  setLatestSubmittedStringContext,\r\n  setSearchCardLoadedContext,\r\n  shinyContext,\r\n  hiddenContext,\r\n  lastViewedPokemonContext,\r\n} from \"../App\";\r\n\r\nfunction PokeCard({\r\n  pokemonData,\r\n  pokemonTypes,\r\n  typeData,\r\n  imageLoaded,\r\n  setImageLoaded,\r\n  fromList,\r\n  setHidden,\r\n}) {\r\n  const [listImageLoaded, setListImageLoaded] = useState(false);\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const setLatestSubmittedString = useContext(setLatestSubmittedStringContext);\r\n  const setSearchCardLoaded = useContext(setSearchCardLoadedContext);\r\n  const shiny = useContext(shinyContext);\r\n  const [, fromListsetHidden] = useContext(hiddenContext);\r\n  const lastViewedPokemon = useContext(lastViewedPokemonContext);\r\n\r\n  const cardClicked = () => {\r\n    if (fromList) {\r\n      if (lastViewedPokemon !== pokemonData.name) {\r\n        setLatestSubmittedString(pokemonData.name);\r\n        setSearchCardLoaded(false);\r\n      } else {\r\n        setSearchCardLoaded(true);\r\n        fromListsetHidden(false);\r\n      }\r\n\r\n      window.scroll({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setListImageLoaded(false);\r\n  }, [shiny]);\r\n\r\n  return (\r\n    <div className=\"container mt-5 \">\r\n      {pokemonData && (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-auto mx-auto jumbotron p-3 mb-15\"\r\n              style={\r\n                hover && fromList\r\n                  ? {\r\n                      border: \"1px solid black\",\r\n                      borderRadius: \"20px\",\r\n                      cursor: \"pointer\",\r\n                      boxShadow: \"inset 0 0 0 10px rgba(255,255,255, .4)\",\r\n                    }\r\n                  : { border: \"1px solid black\", borderRadius: \"20px\" }\r\n              }\r\n              onClick={cardClicked}\r\n              onMouseOver={() => setHover(true)}\r\n              onMouseLeave={() => setHover(false)}\r\n            >\r\n              {!fromList && (\r\n                <button\r\n                  onClick={() => setHidden(true)}\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  aria-label=\"Close\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: \"5%\",\r\n                    left: \"85%\",\r\n                    cursor: \"pointer\",\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              )}\r\n              <SearchCardPic\r\n                pokemonID={pokemonData.id}\r\n                imageLoaded={!fromList ? imageLoaded : listImageLoaded}\r\n                setImageLoaded={!fromList ? setImageLoaded : setListImageLoaded}\r\n                fromList={fromList}\r\n              />\r\n\r\n              <div className=\"text-uppercase font-weight-bold\">\r\n                #{pokemonData.id} {pokemonData.name}\r\n              </div>\r\n\r\n              <div className=\"m-1\">\r\n                {pokemonTypes.map((t) => (\r\n                  <TypeBlock type={t} key={t} />\r\n                ))}\r\n              </div>\r\n\r\n              {/* <div className=\"m-1\">\r\n                {pokemonData.abilities.map((a) => (\r\n                  <span>{a.ability.name + \" \"}</span>\r\n                ))}\r\n              </div> */}\r\n\r\n              {!fromList && (\r\n                <button\r\n                  className=\"btn btn-secondary btn-sm\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseExample\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseExample\"\r\n                >\r\n                  Damage Relations\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {!fromList && (\r\n            <div>\r\n              <div\r\n                className=\"collapse jumbotron p-2\"\r\n                id=\"collapseExample\"\r\n                style={{ border: \"1.5px solid black\" }}\r\n              >\r\n                <DamageRelations typeData={typeData} />\r\n              </div>\r\n              <hr className=\"rounded\" style={{ width: \"80%\" }} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PokeCard);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PokeCard from \"./PokeCard\";\r\nimport RotateLoader from \"react-spinners/RotateLoader\";\r\n\r\nfunction SearchCard({\r\n  searchCardLoaded,\r\n  setSearchCardLoaded,\r\n  latestSubmittedString,\r\n  setLatestSubmittedString,\r\n  hidden,\r\n  setHidden,\r\n  setLastViewedPokemon,\r\n}) {\r\n  const [pokemonName, setPokemonName] = useState(\"\");\r\n  const [pokemonData, setPokemonData] = useState(null);\r\n  const [pokemonTypes, setPokemonTypes] = useState([]);\r\n  const [typeData, setTypeData] = useState([]);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [invalidPokemon, SetInvalidPokemon] = useState(false);\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    setSearchCardLoaded(false);\r\n    setHidden(false);\r\n    const getPokemonData = async () => {\r\n      if (isMounted.current) {\r\n        try {\r\n          const prevPokemon = pokemonData ? pokemonData.name : null;\r\n          setLastViewedPokemon(prevPokemon);\r\n\r\n          const res = await axios.get(\r\n            `https://pokeapi.co/api/v2/pokemon/${latestSubmittedString.toLowerCase()}/`,\r\n            {\r\n              cancelToken: source.token,\r\n            }\r\n          );\r\n\r\n          if (res.data.name !== prevPokemon) {\r\n            setPokemonData(res.data);\r\n            setImageLoaded(false);\r\n            setSearchCardLoaded(false);\r\n          }\r\n        } catch (err) {\r\n          if (!axios.isCancel(err)) SetInvalidPokemon(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    getPokemonData();\r\n    return () => source.cancel();\r\n  }, [latestSubmittedString, pokemonData]);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    setHidden(false);\r\n    const getTypeData = async () => {\r\n      if (isMounted.current) {\r\n        let strongWeakData = [];\r\n        let typeArray = [];\r\n\r\n        for (const t of pokemonData.types) {\r\n          let type = t.type.name;\r\n          typeArray.push(type);\r\n          const typeRes = await axios.get(\r\n            `https://pokeapi.co/api/v2/type/${type}/`,\r\n            { cancelToken: source.token }\r\n          );\r\n\r\n          let tData = typeRes.data.damage_relations;\r\n          tData = Object.fromEntries(\r\n            Object.entries(tData).map(([key, types]) => [\r\n              key,\r\n              types.map((t) => t.name),\r\n            ])\r\n          );\r\n          tData.type = type;\r\n          strongWeakData.push(tData);\r\n        }\r\n\r\n        setTypeData(strongWeakData);\r\n        setPokemonTypes(typeArray);\r\n        setSearchCardLoaded(true);\r\n      } else {\r\n        isMounted.current = true;\r\n      }\r\n    };\r\n    getTypeData();\r\n\r\n    return () => source.cancel();\r\n  }, [pokemonData]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    SetInvalidPokemon(false);\r\n    setLatestSubmittedString(pokemonName);\r\n    setHidden(false);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"auto\" }}>\r\n      <SearchBar\r\n        pokemonName={pokemonName}\r\n        handleSubmit={handleSubmit}\r\n        setPokemonName={setPokemonName}\r\n        setHidden={setHidden}\r\n      />\r\n\r\n      {invalidPokemon && (\r\n        <div\r\n          className=\"alert alert-warning alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          <strong>Who's that Pokemon? Please enter valid Pokemon name.</strong>\r\n        </div>\r\n      )}\r\n\r\n      {pokemonData && !searchCardLoaded && (\r\n        <div\r\n          className=\"d-inline-flex align-items-center justify-content-center\"\r\n          style={{ height: \"423px\" }}\r\n        >\r\n          <RotateLoader loading={!searchCardLoaded} size={15} />\r\n        </div>\r\n      )}\r\n\r\n      {searchCardLoaded && !hidden && (\r\n        <div>\r\n          <PokeCard\r\n            pokemonData={pokemonData}\r\n            pokemonTypes={pokemonTypes}\r\n            typeData={typeData}\r\n            imageLoaded={imageLoaded}\r\n            setImageLoaded={setImageLoaded}\r\n            fromList={false}\r\n            setHidden={setHidden}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchCard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport PokeCard from \"./PokeCard\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nfunction PokeList({ curURL, setCurURL, shiny, setShiny }) {\r\n  const [currentList, setcurrentList] = useState([]);\r\n  const [prevURL, setPrevURL] = useState(null);\r\n  const [nextURL, setNextURL] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    setError(false);\r\n\r\n    const getList = async (curURL) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const res = await axios.get(curURL, {\r\n          cancelToken: source.token,\r\n        });\r\n        const resData = res.data;\r\n        setPrevURL(resData.previous);\r\n        setNextURL(resData.next);\r\n\r\n        const requestList = new Array(20);\r\n        const pokemonDataList = new Array(20);\r\n\r\n        try {\r\n          for (let i = 0; i < resData.results.length; i++) {\r\n            requestList[i] = axios.get(resData.results[i].url, {\r\n              cancelToken: source.token,\r\n            });\r\n          }\r\n\r\n          await axios.all(requestList).then(\r\n            axios.spread((...responses) => {\r\n              for (let i = 0; i < resData.results.length; i++) {\r\n                pokemonDataList[i] = responses[i].data;\r\n              }\r\n            })\r\n          );\r\n\r\n          setcurrentList(pokemonDataList);\r\n          setLoading(false);\r\n        } catch (err) {\r\n          if (!axios.isCancel(err)) {\r\n            setError(true);\r\n            throw err;\r\n          }\r\n        }\r\n      } catch (err) {\r\n        if (!axios.isCancel(err)) {\r\n          setError(true);\r\n          throw err;\r\n        }\r\n      }\r\n    };\r\n\r\n    getList(curURL);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [curURL]);\r\n\r\n  const onPrevClick = async () => {\r\n    setCurURL(prevURL);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const onNextClick = async () => {\r\n    setCurURL(nextURL);\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loading && !error && (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <HashLoader loading={loading} size={40} />\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div\r\n          className=\"alert alert-warning alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/surprised-pikachu.jpg\"}\r\n            alt=\"Surprised pikachu - error\"\r\n            width=\"50\"\r\n            height=\"60\"\r\n          ></img>\r\n          <strong>\r\n            {\" \"}\r\n            Error at PokeAPI end! Try going to the next or previous page.\r\n          </strong>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {!loading && (\r\n        <div>\r\n          <div className=\"row\">\r\n            {currentList.map((pokemonData) => (\r\n              <div className=\"col-auto m-auto\" key={pokemonData.name}>\r\n                <PokeCard\r\n                  pokemonData={pokemonData}\r\n                  pokemonTypes={pokemonData.types.map((t) => t.type.name)}\r\n                  fromList={true}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-bottom py-1\">\r\n        <div className=\"m-auto\">\r\n          {prevURL && (\r\n            <button\r\n              className=\"btn btn-md btn-light my-2 my-sm-0 mr-2\"\r\n              onClick={onPrevClick}\r\n            >\r\n              Previous\r\n            </button>\r\n          )}\r\n          {nextURL && (\r\n            <button\r\n              className=\"btn btn-md btn-light my-2 my-sm-0\"\r\n              onClick={onNextClick}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n        </div>\r\n        <button\r\n          className={`btn  btn-md btn${\r\n            shiny ? \"\" : \"-outline\"\r\n          }-warning my-2 my-sm-0 mr-2`}\r\n          onClick={() => setShiny(!shiny)}\r\n          style={{ width: \"88px\" }}\r\n        >\r\n          {shiny ? \"Shinified\" : \"Shinify\"}\r\n        </button>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PokeList);\r\n","import React, { useState } from \"react\";\nimport SearchCard from \"./components/SearchCard\";\nimport PokeList from \"./components/PokeList\";\nimport \"./App.css\";\n\nexport const setCurURLContext = React.createContext();\nexport const setLatestSubmittedStringContext = React.createContext();\nexport const setSearchCardLoadedContext = React.createContext();\nexport const shinyContext = React.createContext();\nexport const hiddenContext = React.createContext();\nexport const lastViewedPokemonContext = React.createContext();\n\nfunction App() {\n  const [curURL, setCurURL] = useState(\"https://pokeapi.co/api/v2/pokemon\");\n  const [latestSubmittedString, setLatestSubmittedString] = useState(\"\");\n  const [searchCardLoaded, setSearchCardLoaded] = useState(false);\n  const [shiny, setShiny] = useState(false);\n  const [hidden, setHidden] = useState(false);\n  const [lastViewedPokemon, setLastViewedPokemon] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <lastViewedPokemonContext.Provider value={lastViewedPokemon}>\n        <hiddenContext.Provider value={[hidden, setHidden]}>\n          <shinyContext.Provider value={shiny}>\n            <setCurURLContext.Provider value={setCurURL}>\n              <SearchCard\n                searchCardLoaded={searchCardLoaded}\n                setSearchCardLoaded={setSearchCardLoaded}\n                latestSubmittedString={latestSubmittedString}\n                setLatestSubmittedString={setLatestSubmittedString}\n                hidden={hidden}\n                setHidden={setHidden}\n                setLastViewedPokemon={setLastViewedPokemon}\n              />\n            </setCurURLContext.Provider>\n\n            <setLatestSubmittedStringContext.Provider\n              value={setLatestSubmittedString}\n            >\n              <setSearchCardLoadedContext.Provider value={setSearchCardLoaded}>\n                <PokeList\n                  curURL={curURL}\n                  setCurURL={setCurURL}\n                  shiny={shiny}\n                  setShiny={setShiny}\n                />\n              </setSearchCardLoadedContext.Provider>\n            </setLatestSubmittedStringContext.Provider>\n          </shinyContext.Provider>\n        </hiddenContext.Provider>\n      </lastViewedPokemonContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}